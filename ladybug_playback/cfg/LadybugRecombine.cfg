#! /usr/bin/env python

#  Stanford Driving Software
#  Copyright (c) 2011 Stanford University
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with
#  or without modification, are permitted provided that the
#  following conditions are met:
#
#  Redistributions of source code must retain the above
#  copyright notice, this list of conditions and the
#  following disclaimer.
#  Redistributions in binary form must reproduce the above
#  copyright notice, this list of conditions and the
#  following disclaimer in the documentation and/or other
#  materials provided with the distribution.
#  The names of the contributors may not be used to endorse
#  or promote products derived from this software
#  without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
#  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
#  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
#  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#  DAMAGE.

from dynamic_reconfigure.parameter_generator_catkin import *
from driver_base.msg import SensorLevels


gen = ParameterGenerator()

#       Name, Type, Reconfiguration level, Description, Default, Min, Max


gen.add("debayer", bool_t, SensorLevels.RECONFIGURE_CLOSE,
        "Whether to debayer the image.", False)

# Generic IIDC feature control states, not all apply.
debayer_methods = gen.enum([gen.const("Nearest", int_t, 0, "Nearest"),
                     gen.const("Simple", int_t, 1, "Simple"),
                     gen.const("Bilinear", int_t, 2, "Bilinear"),
                     gen.const("HQLinear", int_t, 3, "HQLinear"),
                     gen.const("Downsample", int_t, 4, "Downsample"),
                     gen.const("Edgesense", int_t, 5, "Edgesense"),
                     gen.const("VNG", int_t, 6, "VNG"),
                     gen.const("AHD", int_t, 7, "AHD")],
                    "Debayering methods")

gen.add("debayer_method", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "Debayering method.", 3, 0, 7, edit_method = debayer_methods)

exit(gen.generate("ladybug_playback", "LadybugRecombine", "LadybugRecombine"))
